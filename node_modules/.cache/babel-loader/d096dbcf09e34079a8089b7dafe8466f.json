{"ast":null,"code":"import _regeneratorRuntime from \"/Users/miteshpatel/Desktop/falgu_patel-eog-react-assessment/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(apiErrorReceived),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchApiError);\n\nimport { takeEvery, call } from \"redux-saga/effects\";\nimport * as actions from \"../actions\";\nimport { toast } from \"react-toastify\";\n\nfunction apiErrorReceived(action) {\n  return _regeneratorRuntime.wrap(function apiErrorReceived$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return call(toast.error, \"Error Received: \".concat(action.code));\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this);\n}\n\nfunction watchApiError() {\n  return _regeneratorRuntime.wrap(function watchApiError$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(actions.API_ERROR, apiErrorReceived);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this);\n}\n\nexport default [watchApiError];","map":{"version":3,"sources":["/Users/miteshpatel/Desktop/falgu_patel-eog-react-assessment/src/store/sagas/ApiErrors.js"],"names":["apiErrorReceived","watchApiError","takeEvery","call","actions","toast","action","error","code","API_ERROR"],"mappings":";;;;yBAIUA,gB;;;yBAIAC,a;;AARV,SAASC,SAAT,EAAoBC,IAApB,QAAgC,oBAAhC;AACA,OAAO,KAAKC,OAAZ,MAAyB,YAAzB;AACA,SAASC,KAAT,QAAsB,gBAAtB;;AAEA,SAAUL,gBAAV,CAA2BM,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMH,IAAI,CAACE,KAAK,CAACE,KAAP,4BAAiCD,MAAM,CAACE,IAAxC,EAAV;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUP,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMC,SAAS,CAACE,OAAO,CAACK,SAAT,EAAoBT,gBAApB,CAAf;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAe,CAACC,aAAD,CAAf","sourcesContent":["import { takeEvery, call } from \"redux-saga/effects\";\nimport * as actions from \"../actions\";\nimport { toast } from \"react-toastify\";\n\nfunction* apiErrorReceived(action) {\n  yield call(toast.error, `Error Received: ${action.code}`);\n}\n\nfunction* watchApiError() {\n  yield takeEvery(actions.API_ERROR, apiErrorReceived);\n}\n\nexport default [watchApiError];\n"]},"metadata":{},"sourceType":"module"}