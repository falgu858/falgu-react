{"ast":null,"code":"import _regeneratorRuntime from \"/Users/miteshpatel/Desktop/falgu_patel-eog-react-assessment/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/miteshpatel/Desktop/falgu_patel-eog-react-assessment/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/miteshpatel/Desktop/falgu_patel-eog-react-assessment/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/miteshpatel/Desktop/falgu_patel-eog-react-assessment/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/miteshpatel/Desktop/falgu_patel-eog-react-assessment/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/miteshpatel/Desktop/falgu_patel-eog-react-assessment/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/miteshpatel/Desktop/falgu_patel-eog-react-assessment/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/miteshpatel/Desktop/falgu_patel-eog-react-assessment/src/components/Chart.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from \"@material-ui/core/Card\";\nimport CardHeaderRaw from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\nvar cardStyles = function cardStyles(theme) {\n  return {\n    root: {\n      background: 'initial'\n    },\n    title: {\n      color: \"initial\",\n      textAlign: 'center'\n    }\n  };\n};\n\nvar CardHeader = withStyles(cardStyles)(CardHeaderRaw);\nvar styles = {\n  card: {\n    margin: \"5% 25%\"\n  }\n};\n\nvar MetricChart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MetricChart, _Component);\n\n  function MetricChart() {\n    _classCallCheck(this, MetricChart);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MetricChart).apply(this, arguments));\n  }\n\n  _createClass(MetricChart, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var _this = this;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                try {\n                  setInterval(\n                  /*#__PURE__*/\n                  _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee() {\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            _this.props.onLoad();\n\n                          case 1:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee, this);\n                  })), 5000);\n                } catch (e) {\n                  console.log(e);\n                }\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          metricData = _this$props.metricData,\n          classes = _this$props.classes;\n      return React.createElement(Card, {\n        className: classes.card,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        title: \"Sample Drone Teparature?\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(LineChart, {\n        width: 500,\n        height: 300,\n        data: metricData,\n        margin: {\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(XAxis, {\n        dataKey: \"hours\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(Tooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(Legend, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: \"metRic\",\n        stroke: \"#2d7fb8\",\n        activeDot: {\n          r: 4\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return MetricChart;\n}(Component);\n\nvar mapState = function mapState(state, ownProps) {\n  var metricData = state.chart.metricData;\n  return {\n    metricData: metricData\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    onLoad: function onLoad() {\n      return dispatch({\n        type: actions.FETCH_CHART_METRIC\n      });\n    }\n  };\n};\n\nexport default connect(mapState, mapDispatch)(withStyles(styles)(MetricChart));","map":{"version":3,"sources":["/Users/miteshpatel/Desktop/falgu_patel-eog-react-assessment/src/components/Chart.js"],"names":["React","Component","connect","actions","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","withStyles","Card","CardHeaderRaw","CardContent","cardStyles","theme","root","background","title","color","textAlign","CardHeader","styles","card","margin","MetricChart","setInterval","props","onLoad","e","console","log","metricData","classes","top","right","left","bottom","r","mapState","state","ownProps","chart","mapDispatch","dispatch","type","FETCH_CHART_METRIC"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AACA,SACEC,SADF,EACaC,IADb,EACmBC,KADnB,EAC0BC,KAD1B,EACiCC,aADjC,EACgDC,OADhD,EACyDC,MADzD,QAEO,UAFP;AAIA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK;AAAA,SAAK;AAC3BC,IAAAA,IAAI,EAAE;AACJC,MAAAA,UAAU,EAAE;AADR,KADqB;AAI3BC,IAAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE,SADF;AAELC,MAAAA,SAAS,EAAE;AAFN;AAJoB,GAAL;AAAA,CAAxB;;AAUA,IAAMC,UAAU,GAAGX,UAAU,CAACI,UAAD,CAAV,CAAuBF,aAAvB,CAAnB;AACA,IAAMU,MAAM,GAAG;AACbC,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE;AADJ;AADO,CAAf;;IAKMC,W;;;;;;;;;;;;;;;;;;;;;;;AAEA,oBAAI;AACFC,kBAAAA,WAAW;AAAA;AAAA;AAAA;AAAA,2CAAC;AAAA;AAAA;AAAA;AAAA;AACV,4BAAA,KAAI,CAACC,KAAL,CAAWC,MAAX;;AADU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAD,IAER,IAFQ,CAAX;AAGD,iBAJD,CAIE,OAAMC,CAAN,EAAS;AACTC,kBAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;;;;;;;;;;;;;;;;;;6BAEQ;AAAA,wBACyB,KAAKF,KAD9B;AAAA,UACCK,UADD,eACCA,UADD;AAAA,UACaC,OADb,eACaA,OADb;AAEL,aACD,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAEA,OAAO,CAACV,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAC,0BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAEE,oBAAC,SAAD;AACG,QAAA,KAAK,EAAE,GADV;AAEG,QAAA,MAAM,EAAE,GAFX;AAGG,QAAA,IAAI,EAAES,UAHT;AAIG,QAAA,MAAM,EAAE;AACNE,UAAAA,GAAG,EAAE,CADC;AACEC,UAAAA,KAAK,EAAE,EADT;AACaC,UAAAA,IAAI,EAAE,EADnB;AACuBC,UAAAA,MAAM,EAAE;AAD/B,SAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQG,oBAAC,aAAD;AAAe,QAAA,eAAe,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARH,EASG,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATH,EAUG,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVH,EAWG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXH,EAYG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZH,EAaG,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAC,QAA9B;AAAuC,QAAA,MAAM,EAAC,SAA9C;AAAwD,QAAA,SAAS,EAAE;AAAEC,UAAAA,CAAC,EAAC;AAAJ,SAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbH,CAFF,CADC;AAqBT;;;;EAjCyBtC,S;;AAoC1B,IAAMuC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAAA,MAEjCT,UAFiC,GAGhCQ,KAAK,CAACE,KAH0B,CAEjCV,UAFiC;AAIpC,SAAO;AACLA,IAAAA,UAAU,EAAVA;AADK,GAAP;AAGD,CAPD;;AAQA,IAAMW,WAAW,GAAG,SAAdA,WAAc,CAAAC,QAAQ;AAAA,SAAK;AAC7BhB,IAAAA,MAAM,EAAE;AAAA,aACNgB,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAE3C,OAAO,CAAC4C;AADP,OAAD,CADF;AAAA;AADqB,GAAL;AAAA,CAA5B;;AAOE,eAAe7C,OAAO,CACpBsC,QADoB,EAEpBI,WAFoB,CAAP,CAGbjC,UAAU,CAACY,MAAD,CAAV,CAAoBG,WAApB,CAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../store/actions\";\r\nimport {\r\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\r\n} from 'recharts';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeaderRaw from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nconst cardStyles = theme => ({\r\n  root: {\r\n    background: 'initial'\r\n  },\r\n  title: {\r\n    color: \"initial\",\r\n    textAlign: 'center',\r\n  }\r\n});\r\n\r\nconst CardHeader = withStyles(cardStyles)(CardHeaderRaw);\r\nconst styles = {\r\n  card: {\r\n    margin: \"5% 25%\"\r\n  }\r\n};\r\nclass MetricChart extends Component {\r\n    async componentDidMount() {\r\n      try {\r\n        setInterval(async () => {\r\n          this.props.onLoad();\r\n        }, 5000);\r\n      } catch(e) {\r\n        console.log(e);\r\n      }\r\n}\r\n      render() {\r\n        const { metricData, classes } = this.props;\r\n          return (\r\n         <Card className={classes.card}>\r\n         <CardHeader title=\"Sample Drone Teparature?\" />\r\n           <LineChart\r\n              width={500}\r\n              height={300}\r\n              data={metricData}\r\n              margin={{\r\n                top: 5, right: 30, left: 20, bottom: 5,\r\n              }}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"hours\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Legend />\r\n              <Line type=\"monotone\" dataKey=\"metRic\" stroke=\"#2d7fb8\" activeDot={{ r:4 }} />\r\n            </LineChart>\r\n            </Card>\r\n          );\r\n  \r\n}\r\n      \r\n}\r\nconst mapState = (state, ownProps) => {\r\n   const {\r\n     metricData\r\n  } = state.chart;\r\n  return {\r\n    metricData\r\n  };\r\n};\r\nconst mapDispatch = dispatch => ({\r\n    onLoad: () =>\r\n      dispatch({\r\n        type: actions.FETCH_CHART_METRIC\r\n      })\r\n  });\r\n\r\n  export default connect(\r\n    mapState,\r\n    mapDispatch\r\n  )(withStyles(styles) (MetricChart));\r\n"]},"metadata":{},"sourceType":"module"}